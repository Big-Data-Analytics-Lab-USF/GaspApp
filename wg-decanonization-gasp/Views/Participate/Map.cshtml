@using Newtonsoft.Json
@model GaspApp.Models.ParticipateViewModels.MapViewModel
@inject SharedViewLocalizer Localizer

@{
	ViewData["Title"] = Localizer["Participation"];
	var modelJson = JsonConvert.SerializeObject(Model!);
}

<div class="container" id="map-container">
	<p class="has-text-centered">We have received @Model.TotalResponses total responses from @Model.TotalCountries different countries: @string.Join(", ", Model.LocationCodes).</p>
	<div id="map" style="height: 600px;"></div>
</div>

<script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
<script type="text/javascript" src="https://stamen-maps.a.ssl.fastly.net/js/tile.stamen.js?v1.3.0"></script>

<script>
	const geoJson = @Html.Raw(Model.GeoJson);

	let layer = new L.StamenTileLayer("terrain");
	let map = new L.map('map', {
		zoom: 3,
		center: [15, 30],
		worldCopyJump: true,
	});
	map.addLayer(layer);

	function randomColor() {
		const letters = '0123456789ABCDEF';
		let color = '#';
		for (let i = 0; i < 6; i++) {
			color += letters[Math.floor(Math.random() * 16)];
		}
		return color;
	}

	function style(feature) {
		return {
			fillColor: randomColor(),
			fillOpacity: 0.7,
			weight: 2,
			opacity: 1,
			color: 'lightblue',
			dashArray: '3'
		}
	}
	function onEachFeature(feature, layer) {
		layer.on({
			mouseover: setHighlight,
			mouseout: resetHighlight,
			click: zoomToFeature
		});
	}

	let geoLayer = L.geoJson(geoJson, { style: style, onEachFeature: onEachFeature }).addTo(map);
	
	let info = L.control();
	info.onAdd = function(map) {
		this._div = L.DomUtil.create('div', 'choropleth-info');
		this.update();
		return this._div;
	}
	info.update = function(props) {
		let html = '';
		if (props) {
			html = 'country: ' + props.ADMIN + ', count: ' + props.Count;
		} else {
			html = 'Hover over a country';
		}
		this._div.innerHTML = html;
	}
	info.addTo(map);
	console.log(info);

	function setHighlight(e) {
		let layer = e.target;

		layer.setStyle({
			weight: 5,
			color: 'blue',
			dashArray: ''
		});

		info.update(layer.feature.properties);

		layer.bringToFront();
	}
	function resetHighlight(e) {
		info.update();
		geoLayer.resetStyle(e.target);
	}
	function zoomToFeature(e) {
		map.fitBounds(e.target.getBounds());
	}
</script>