@inject SharedViewLocalizer Localizer

@{
	ViewData["Title"] = Localizer["Survey"];
}

<section class="hero is-small is-primary">
	<div class="hero-body">
		<h1 class="title">@Localizer["Survey"]</h1>
		<h2 class="subtitle">Week 0: Survey Title</h2>
	</div>
</section>
<div class="container">
	<section class="section">
		<form class="form">
			<p class="has-text-weight-bold">You may omit the following section if you wish to remain anonymous:</p>
			<div class="field has-addons">
				<div class="control">
					<span class="select">
						<select id="countries">
							<option>Country</option>
						</select>
					</span>
				</div>
				<div class="control">
					<input class="input" type="text" placeholder="Name"/>
				</div>
			</div>
			<div class="field">
				<label class="label">What textbook do you use?</label>
				<div class="control">
					<input class="input" type="text" required />
				</div>
			</div>
			<div class="field">
				<label class="label">What questions would you like to see here?</label>
				<div class="control">
					<textarea class="textarea" required></textarea>
				</div>
			</div>
			<div class="field">
				<label class="label">Do your classes meet in person?</label>
				<div class="control">
					<label class="radio">
						<input type="radio" name="answer"/>Yes
					</label>
					<label class="radio">
						<input type="radio" name="answer"/>No
					</label>
				</div>
			</div>
			<div class="control">
				<button class="button is-success" type="submit">@Localizer["Submit"]</button>
			</div>
		</form>
	</section>
</div>

<script>
	const el = document.getElementById("countries");
	fetch("/js/Countries.json").then(r => r.json()).then(data => {
		data.forEach(x => {
			el.appendChild(new Option(x.country, x.abbreviation));
		});
	})
</script>