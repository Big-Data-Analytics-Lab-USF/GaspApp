@inject SharedViewLocalizer Localizer
@model Survey

@{
	ViewData["Title"] = Localizer["Survey"];
}

<section class="hero is-small is-primary">
	<div class="hero-body">
		<h1 class="title">@Localizer["Survey"]</h1>
		<h2 class="subtitle">(Temporary Survey ID in place of title @Model!.Id)</h2>
	</div>
</section>
<div class="container">
	<section class="section">
		<form class="form">
			@* Survey Questions*@

			@foreach (var item in Model.Items.OrderBy(i => i.Position))
			{
				<div class="field">
				<label class="label">@item.Label</label>
				<div class="control">
					<input class="input" type="text" id="@item.Name" required />
				</div>
			</div>
			}

			@* Meta-questions *@
			<hr />
			<p class="is-small">
				@Localizer["The following section will help us in analyzing the global impact of our project."]
				<span class="has-text-weight-bold">@Localizer["You may omit these details if you do not wish to be identified."]</span>
			</p>
			<div class="field">
				<div class="control">
					<span class="select is-small">
						<select id="meta-country">
							<option value="null">@Localizer["Country"]</option>
						</select>
					</span>
				</div>
			</div>
			<div class="field">
				<label class="label is-small">@Localizer["Email"]</label>
				<div class="control has-icons-left">
					<input class="input is-small is-family-code" type="email" id="meta-email" />
					<span class="icon is-small is-left">
						<i class="fas fa-envelope"></i>
					</span>
				</div>
			</div>
			<div class="field">
				<label class="label is-small">@Localizer["Preferred Name"]</label>
				<div class="control has-icons-left">
					<input class="input is-small" type="text" id="meta-name" />
					<span class="icon is-small is-left">
						<i class="fas fa-users"></i>
					</span>
				</div>
			</div>
			<hr />
			
			<div class="control">
				<button class="button is-success" type="submit">@Localizer["Submit"]</button>
			</div>
		</form>
	</section>
</div>

<script>
	const el = document.getElementById("meta-country");
	fetch("/js/Countries.json").then(r => r.json()).then(data => {
		data.forEach(x => {
			el.appendChild(new Option(x.country, x.abbreviation));
		});
	})
</script>